# SPDX-License-Identifier: MPL-2.0
[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lousa-assurance"
version = "0.1.0"
description = "A framework for evaluating temporal and epistemic assurance claims"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MPL-2.0" }
classifiers = [
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
]
dependencies = [
    "pydantic>=2.6",
    "PyYAML>=6.0",
    "typer>=0.12",
    "graphviz>=0.20",
    "networkx>=3.2",
    "structlog>=24.1",
]

[project.scripts]
lousa = "lousa.cli:app"

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-cov>=5.0",
    "ruff>=0.3.0",
    "black>=24.0",
    "isort>=5.13",
    "pre-commit>=3.0",
    "mypy>=1.8",
    "pip-audit>=2.7",
    "bandit>=1.7",
    "detect-secrets>=1.5",
    "cyclonedx-bom>=3.14",
    "mkdocs>=1.5",
    "commitizen>=3.20",
    "pip-tools>=7.4",
    "build>=1.2",
    "coverage[toml]>=7.4",
    "yamllint>=1.33",
    "types-PyYAML>=6.0.12",
    "typer[all]>=0.12",
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"lousa" = ["schemas/risk_note.schema.json"]

[tool.black]
line-length = 100
target-version = ["py39"]
include = '\\.(pyi?)$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = ["E", "F", "B", "I", "UP", "S", "C4", "RUF"]
ignore = ["S101", "E501", "S603", "S607"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "D205", "D400"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.11"
strict = true
pretty = true
warn_unreachable = true
ignore_missing_imports = false
disallow_any_generics = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
plugins = []
mypy_path = ["src"]

[tool.coverage.run]
branch = true
source = ["src/lousa"]
omit = ["tests/*"]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 85

[tool.coverage.xml]
output = "coverage.xml"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
version_files = ["pyproject.toml:version", "CHANGELOG.md"]
tag_format = "v$version"

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests/unit", "tests/integration"]
filterwarnings = ["ignore::DeprecationWarning"]
